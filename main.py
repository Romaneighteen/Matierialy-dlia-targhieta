import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_USERNAME = os.getenv("CHANNEL_USERNAME")
BONUS_FILE_URL = os.getenv("BONUS_FILE_URL")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

user_reviews = {}
users_received_bonus = set()

ASK_REVIEW = 1

# --- /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", callback_data="leave_review")],
        [InlineKeyboardButton("üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å", callback_data="get_bonus")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –æ—Å—Ç–∞–≤—å –æ—Ç–∑—ã–≤ –æ –∫—É—Ä—Å–µ –∏ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:\n\n"
        "üì¢ https://t.me/tg_protarget",
        reply_markup=reply_markup
    )

# --- –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ---
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "leave_review":
        await query.message.reply_text("–ù–∞–ø–∏—à–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∑—ã–≤ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º (–º–∏–Ω–∏–º—É–º 30 —Å–∏–º–≤–æ–ª–æ–≤):")
        return ASK_REVIEW

    elif query.data == "get_bonus":
        user_id = query.from_user.id

        if user_id not in user_reviews:
            await query.message.reply_text("‚ùó –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–≤—å –æ—Ç–∑—ã–≤, –∑–∞—Ç–µ–º —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å.")
            return ConversationHandler.END

        chat_member = await context.bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        if chat_member.status not in ['member', 'administrator', 'creator']:
            await query.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª: https://t.me/tg_protarget")
            return ConversationHandler.END

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
        await query.message.reply_text(f"üìé –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n{BONUS_FILE_URL}")
        users_received_bonus.add(user_id)
        return ConversationHandler.END

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞ ---
async def handle_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    review_text = update.message.text.strip()

    if len(review_text) < 30:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –±–æ–ª–µ–µ —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—ã–π –æ—Ç–∑—ã–≤ (–æ—Ç 30 —Å–∏–º–≤–æ–ª–æ–≤).")
        return ASK_REVIEW

    user_reviews[user_id] = review_text

    # –ü–µ—Ä–µ—Å–ª–∞—Ç—å –æ—Ç–∑—ã–≤ –∞–¥–º–∏–Ω—É
    await context.bot.send_message(chat_id=ADMIN_ID, text=f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç @{update.effective_user.username}:\n\n{review_text}")

    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã üëá")

    keyboard = [[InlineKeyboardButton("üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å", callback_data="get_bonus")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å:", reply_markup=reply_markup)

    return ConversationHandler.END

# --- –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ ---
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CallbackQueryHandler(button_handler)],
        states={ASK_REVIEW: [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_review)]},
        fallbacks=[],
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(conv_handler)
    app.add_handler(CallbackQueryHandler(button_handler))  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
