import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    ConversationHandler,
    filters,
)
from dotenv import load_dotenv

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_USERNAME = "@tg_protarget"
YANDEX_DISK_LINK = os.getenv("YANDEX_DISK_LINK")  # –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
ADMIN_ID = int(os.getenv("ADMIN_ID"))  # –¢–≤–æ–π Telegram ID

user_reviews = {}
users_received_link = set()


# --- /start ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç!\n\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ä–µ–∫–ª–∞–º–µ, –Ω—É–∂–Ω–æ:\n\n"
        "1Ô∏è‚É£ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ –∫—É—Ä—Å–µ\n"
        "2Ô∏è‚É£ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª https://t.me/tg_protarget\n"
        "3Ô∏è‚É£ –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n\n"
        "üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:")
    return 1


# --- –û—Ç–∑—ã–≤ ---
async def handle_review(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username or "–±–µ–∑ username"
    review_text = update.message.text

    user_reviews[user_id] = review_text

    # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É
    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=f"‚úâÔ∏è –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç @{username} (ID: {user_id}):\n\n{review_text}"
    )

    # –ü–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É
    keyboard = [["üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text(
        f"‚ù§Ô∏è –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!\n\n–¢–µ–ø–µ—Ä—å –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_USERNAME}, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω.\n"
        f"–ö–æ–≥–¥–∞ –ø–æ–¥–ø–∏—à–µ—à—å—Å—è ‚Äî –Ω–∞–∂–º–∏ 'üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'.",
        reply_markup=reply_markup)

    return ConversationHandler.END


# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –≤—ã–¥–∞—á–∞ —Å—Å—ã–ª–∫–∏ ---
async def check(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id

    chat_member = await context.bot.get_chat_member(chat_id=CHANNEL_USERNAME,
                                                    user_id=user_id)
    if chat_member.status in ['member', 'administrator', 'creator']:
        if user_id in users_received_link:
            await update.message.reply_text(
                "‚úÖ –í—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.")
        else:
            await update.message.reply_text(
                f"üìé –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –±–æ–Ω—É—Å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:\n{YANDEX_DISK_LINK}"
            )
            users_received_link.add(user_id)
    else:
        await update.message.reply_text(
            f"‚ùå –í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.\n–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ {CHANNEL_USERNAME} –∏ –Ω–∞–∂–º–∏—Ç–µ –µ—â—ë —Ä–∞–∑ 'üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'."
        )


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É" ---
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text == "üîÅ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É":
        await check(update, context)


if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            1:
            [MessageHandler(filters.TEXT & ~filters.COMMAND, handle_review)]
        },
        fallbacks=[],
    )

    app.add_handler(conv_handler)
    app.add_handler(
        MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
